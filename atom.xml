<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[John Chapin's Blog]]></title>
  <link href="http://johnchapin.github.io/atom.xml" rel="self"/>
  <link href="http://johnchapin.github.io/"/>
  <updated>2013-12-14T21:09:29+08:00</updated>
  <id>http://johnchapin.github.io/</id>
  <author>
    <name><![CDATA[John Chapin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 3]]></title>
    <link href="http://johnchapin.github.io/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/"/>
    <updated>2013-12-11T00:00:00+08:00</updated>
    <id>http://johnchapin.github.io/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3</id>
    <content type="html"><![CDATA[<p>This is part 3 in a series of posts detailing how I&rsquo;m securing my Internet communications using open-source software. In <a href="http://johnchapin.blogspot.com/2013/12/secure-comms-with-openbsd-and-openvpn.html">part 1</a>, I set up an OpenBSD VPS with full-disk encryption and the minimum OS install necessary to run OpenVPN. <a href="http://johnchapin.blogspot.com/2013/12/secure-comms-with-openbsd-and-openvpn-part2.html">Part 2</a> covered the installation of OpenVPN and configuring the PKI system.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<hr />

<h3>Configuring OpenVPN</h3>

<p>With the OpenVPN package installed and the PKI components in place, configuring and running the actual server software is straightforward. The OpenVPN package includes a sample server configuration file that makes a good starting point.</p>

<!-- more -->


<p>Make an OpenVPN configuration directory in <em>/etc</em>, and add a copy of the sample configuration, the CA certificate, the VPN server certificate and private key, and the Diffie-Hellman parameters:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># As root...</span>
</span><span class='line'><span class="nv">$ </span>mkdir /etc/openvpn
</span><span class='line'>
</span><span class='line'><span class="c"># Copy the sample configuration</span>
</span><span class='line'><span class="nv">$ </span>cp /usr/local/share/examples/openvpn/sample-config-files/server.conf /etc/openvpn/server.conf
</span><span class='line'>
</span><span class='line'><span class="c"># Copy PKI materials from the easy-rsa working directory</span>
</span><span class='line'><span class="nv">$ </span>cp easy-rsa/keys/ca.crt /etc/openvpn/ca.crt
</span><span class='line'><span class="nv">$ </span>cp easy-rsa/keys/dh4096.pem /etc/openvpn/dh4096.pem
</span><span class='line'><span class="nv">$ </span>cp easy-rsa/keys/vpn.example.com.crt /etc/openvpn/vpn.example.com.crt
</span><span class='line'>
</span><span class='line'><span class="c"># Make a private directory for the server key</span>
</span><span class='line'><span class="nv">$ </span>mkdir /etc/openvpn/private
</span><span class='line'><span class="nv">$ </span>chmod 500 /etc/openvpn/private
</span><span class='line'>
</span><span class='line'><span class="c"># Move the server key from the easy-rsa working directory</span>
</span><span class='line'><span class="nv">$ </span>mv easy-rsa/keys/vpn.example.com.key /etc/openvpn/private/vpn.example.com.key
</span><span class='line'><span class="nv">$ </span>chmod 400 /etc/openvpn/private/vpn.example.com.key
</span></code></pre></td></tr></table></div></figure>


<p>I made the following changes to the default configuration:</p>

<ul>
<li>Run the server on port 80, so it can be reached from networks that might restrict or firewall outbound traffic to other ports.</li>
<li>Use the <em>tun0</em> device.</li>
<li>Enable <em>redirect-gateway</em>, to force all client traffic through the VPN.</li>
<li>Push DNS server information addresses to clients (OpenDNS, in this case).</li>
<li>Only allow 2 clients at a time (a laptop and a mobile device).</li>
</ul>


<p>Here&rsquo;s the diff of the <em>server.conf</em> changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>diff /etc/openvpn/server.conf /usr/local/share/examples/openvpn/sample-config-files/server.conf
</span><span class='line'>32c32
</span><span class='line'>&lt; port 80
</span><span class='line'>---
</span><span class='line'>&gt; port 1194
</span><span class='line'>53c53
</span><span class='line'>&lt; dev tun0
</span><span class='line'>---
</span><span class='line'>&gt; dev tun
</span><span class='line'>78,80c78,80
</span><span class='line'>&lt; ca /etc/openvpn/ca.crt
</span><span class='line'>&lt; cert /etc/openvpn/vpn.example.com.crt
</span><span class='line'>&lt; key /etc/openvpn/private/vpn.example.com.key  <span class="c"># This file should be kept secret</span>
</span><span class='line'>---
</span><span class='line'>&gt; ca ca.crt
</span><span class='line'>&gt; cert server.crt
</span><span class='line'>&gt; key server.key  <span class="c"># This file should be kept secret</span>
</span><span class='line'>87c87
</span><span class='line'>&lt; dh /etc/openvpn/dh4096.pem
</span><span class='line'>---
</span><span class='line'>&gt; dh dh1024.pem
</span><span class='line'>187c187
</span><span class='line'>&lt; push <span class="s2">&quot;redirect-gateway def1 bypass-dhcp&quot;</span>
</span><span class='line'>---
</span><span class='line'>&gt; ;push <span class="s2">&quot;redirect-gateway def1 bypass-dhcp&quot;</span>
</span><span class='line'>195,196c195,196
</span><span class='line'>&lt; push <span class="s2">&quot;dhcp-option DNS 208.67.222.222&quot;</span>
</span><span class='line'>&lt; push <span class="s2">&quot;dhcp-option DNS 208.67.220.220&quot;</span>
</span><span class='line'>---
</span><span class='line'>&gt; ;push <span class="s2">&quot;dhcp-option DNS 208.67.222.222&quot;</span>
</span><span class='line'>&gt; ;push <span class="s2">&quot;dhcp-option DNS 208.67.220.220&quot;</span>
</span><span class='line'>255c255
</span><span class='line'>&lt; max-clients 2
</span><span class='line'>---
</span><span class='line'>&gt; ;max-clients 100
</span></code></pre></td></tr></table></div></figure>


<p>Note that in this configuration, the server doesn&rsquo;t need to store individual client certificates. The server will only accept clients whose certificates were signed by the master CA certificate (the same one that signed the server certificate).</p>

<h3>Configuring OpenBSD for OpenVPN</h3>

<p>The OS requires a few additional tweaks to run OpenVPN.</p>

<p>Turn on packet forwarding:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sysctl -n net.inet.ip.forwarding<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>Add the following line to <em>pf.conf</em> to perform Network Address Translation on VPN connections (the 10.8.0.0/24 block is distributed via DHCP to OpenVPN clients):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pass out on em0 from 10.8.0.0/24 to any nat-to <span class="o">(</span>em0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Running the OpenVPN daemon</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/usr/local/sbin/openvpn --daemon --config /etc/openvpn/server.conf
</span><span class='line'>
</span><span class='line'><span class="c"># Verify that it&#39;s actually running:</span>
</span><span class='line'><span class="nv">$ </span>ps -aux | grep openvpn
</span><span class='line'>_openvpn  2900  0.0  0.3  1720  3424 ??  Ss    Mon03PM   21:49.15 /usr/local/sbin/openvpn --daemon --config /etc/openvpn/server.conf
</span></code></pre></td></tr></table></div></figure>


<p>Log output will appear in <em>/var/log/daemon</em>. At this point, there are no clients, so it&rsquo;s enough that the daemon starts without errors.</p>

<h3>Part 4… Client configuration</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 2]]></title>
    <link href="http://johnchapin.github.io/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/"/>
    <updated>2013-12-09T00:00:00+08:00</updated>
    <id>http://johnchapin.github.io/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2</id>
    <content type="html"><![CDATA[<p>This is part 2 in a series of posts detailing how I&rsquo;m securing my Internet communications using open-source software. In <a href="http://johnchapin.blogspot.com/2013/12/secure-comms-with-openbsd-and-openvpn.html">part 1</a>, I set up an OpenBSD VPS with full-disk encryption and the minimum OS install necessary to run OpenVPN.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<hr />

<h3>OpenVPN Installation</h3>

<p>Installing and configuring the OpenVPN package can seem daunting at first, but given a relatively simple VPN architecture (many clients, one server), the setup is straightforward. Many of the steps below are cribbed from the <a href="http://www.kernel-panic.it/openbsd/vpn/vpn4.html">OpenVPN section of &ldquo;Building VPNs on OpenBSD&rdquo;</a>, which is 4 years old but still informative.</p>

<!-- more -->


<p>Install the OpenVPN package from the installation media or an official OpenBSD mirror site. The OpenBSD FAQ has <a href="http://www.openbsd.org/faq/faq15.html#Easy">instructions</a> for setting up the package system.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Dutch mirror site</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PKG_PATH</span><span class="o">=</span><span class="s2">&quot;http://ftp.nluug.nl/pub/OpenBSD/5.3/packages/`machine -a`&quot;</span>
</span><span class='line'><span class="nv">$ </span>pkg_add openvpn
</span></code></pre></td></tr></table></div></figure>


<p>Next, make a copy of the easy-rsa directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cp -R /usr/local/share/examples/openvpn/easy-rsa/2.0 easyrsa
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>easyrsa
</span></code></pre></td></tr></table></div></figure>


<h3>Public Key Infrastructure (PKI) Configuration</h3>

<p>The version of easy-rsa that&rsquo;s included with OpenVPN on OpenBSD 5.3 is missing the <em>whichopenssl</em> script, so in the <em>vars</em> file, the <em>KEY_CONFIG</em> line must be edited in addition to the other <em>KEY*</em> lines. Here is a diff with my changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>diff vars /usr/local/share/examples/openvpn/easy-rsa/2.0/vars
</span><span class='line'>29c29
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_CONFIG</span><span class="o">=</span><span class="s2">&quot;$EASY_RSA/openssl-1.0.0.cnf&quot;</span>
</span><span class='line'>---
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_CONFIG</span><span class="o">=</span><span class="sb">`</span><span class="nv">$EASY_RSA</span>/whichopensslcnf <span class="nv">$EASY_RSA</span><span class="sb">`</span>
</span><span class='line'>53c53
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_SIZE</span><span class="o">=</span>4096
</span><span class='line'>---
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_SIZE</span><span class="o">=</span>1024
</span><span class='line'>64,71c64,72
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_COUNTRY</span><span class="o">=</span><span class="s2">&quot;ZZcountry&quot;</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_PROVINCE</span><span class="o">=</span><span class="s2">&quot;ZZprovince&quot;</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_CITY</span><span class="o">=</span><span class="s2">&quot;ZZcity&quot;</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_ORG</span><span class="o">=</span><span class="s2">&quot;example&quot;</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_EMAIL</span><span class="o">=</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_CN</span><span class="o">=</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_NAME</span><span class="o">=</span>
</span><span class='line'>&lt; <span class="nb">export </span><span class="nv">KEY_OU</span><span class="o">=</span>
</span><span class='line'>---
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_COUNTRY</span><span class="o">=</span><span class="s2">&quot;US&quot;</span>
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_PROVINCE</span><span class="o">=</span><span class="s2">&quot;CA&quot;</span>
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_CITY</span><span class="o">=</span><span class="s2">&quot;SanFrancisco&quot;</span>
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_ORG</span><span class="o">=</span><span class="s2">&quot;Fort-Funston&quot;</span>
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_EMAIL</span><span class="o">=</span><span class="s2">&quot;me@myhost.mydomain&quot;</span>
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_EMAIL</span><span class="o">=</span>mail@host.domain
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_CN</span><span class="o">=</span>changeme
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_NAME</span><span class="o">=</span>changeme
</span><span class='line'>&gt; <span class="nb">export </span><span class="nv">KEY_OU</span><span class="o">=</span>changeme
</span></code></pre></td></tr></table></div></figure>


<p>Because they are likely to change for each certificate generated, the <em>KEY_EMAIL</em>, <em>KEY_CN</em>, <em>KEY_NAME</em>, and <em>KEY_OU</em> values can be removed from the file.</p>

<p>After editing the vars file, source it and run these scripts to setup the PKI system:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>. vars
</span><span class='line'><span class="nv">$ </span>./clean-all
</span><span class='line'><span class="nv">$ </span>./build-dh
</span><span class='line'><span class="nv">$ </span>./pkitool --initca
</span></code></pre></td></tr></table></div></figure>


<p>Generate a certificate for the VPN server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./pkitool --server vpn.example.com
</span></code></pre></td></tr></table></div></figure>


<p>And one or more client certificates:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Can also supply KEY_CN, KEY_OU, and KEY_EMAIL</span>
</span><span class='line'><span class="nv">$ KEY_NAME</span><span class="o">=</span>client1 ./pkitool client1.example.com
</span></code></pre></td></tr></table></div></figure>


<p>The <em>keys</em> directory should now be full of certificates, keys, and signing requests:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls keys/
</span><span class='line'>01.pem
</span><span class='line'>02.pem
</span><span class='line'>ca.crt
</span><span class='line'>ca.key
</span><span class='line'>dh4096.pem
</span><span class='line'>serial
</span><span class='line'>vpn.example.com.crt
</span><span class='line'>vpn.example.com.csr
</span><span class='line'>vpn.example.com.key
</span><span class='line'>client1.example.com.crt
</span><span class='line'>client1.example.com.csr
</span><span class='line'>client1.example.com.key
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3><a href="http://johnchapin.blogspot.nl/2013/12/secure-comms-with-openbsd-and-openvpn_11.html">Part 3 &ndash; Running OpenVPN on OpenBSD</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 1]]></title>
    <link href="http://johnchapin.github.io/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/"/>
    <updated>2013-12-07T00:00:00+08:00</updated>
    <id>http://johnchapin.github.io/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1</id>
    <content type="html"><![CDATA[<p>This is part 1 in a series of posts detailing how I secure my Internet communications using OpenBSD, OpenVPN, and other open-source software.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<h3>Virtual Private Server</h3>

<p>I prefer a virtual private server (VPS) over buying, configuring, shipping, upgrading, and disposing of a Real Machine™. Using QEMU/KVM, the hosting company <a href="http://transip.eu">TransIP</a> supports VPSs running <a href="http://www.openbsd.org">OpenBSD</a> 5.3. I&rsquo;m currently using their &ldquo;Blade VPS X1&rdquo; product, which costs €10/month and provides 1GB memory, 50GB storage, 1TB transfer, and importantly, a static IPv4 address.</p>

<!-- more -->


<h3>Why OpenBSD?</h3>

<p>I trust OpenBSD to be the most secure operating system available, and I have several years of experience installing and using it. The OpenBSD development team is world-renowned for their commitment to security, and I truly believe that there is no better general-purpose operating system to use as a basis for this project.</p>

<p>TransIP supplies installation files for OpenBSD 5.3. Unfortunately, the OpenBSD project does <em>not</em> digitally sign their releases, instead choosing only to provide SHA256 hashes of the installation set files to protect against corruption or tampering. In their own words, <a href="http://www.openbsd.org/faq/faq3.html#Verify">&ldquo;If the men in black suits are out to get you, they&rsquo;re going to get you.&rdquo;</a></p>

<p>With that in mind, when using a VPS, we have no choice but to trust that the provider hasn&rsquo;t tampered with the installation process or tapped the VNC console (before SSH can be enabled) to capture our disk encryption or system passwords.</p>

<h3>OpenBSD Installation with Full Disk Encryption</h3>

<p>OpenBSD 5.3 supports full disk encryption, so I followed the steps in Ryan Kavanagh&rsquo;s blog post, <a href="http://ryanak.ca/planet-ubuntu/2013/03/26/Setting-up-full-disk-encryption-in-OpenBSD-5.3.html">&ldquo;Setting up full disk encryption in OpenBSD 5.3&rdquo;</a>. His instructions are comprehensive, but I found it useful to re-familiarize myself with both the <a href="http://www.openbsd.org/faq/faq4.html">OpenBSD installation process</a>, and the usage of <a href="http://www.openbsd.org/faq/faq14.html#fdisk">fdisk</a> in particular.</p>

<p>After setting up the encrypted disk, I proceeded with the standard OpenBSD installation, using sd0 as the installation target, and selecting &ldquo;whole&rdquo; when prompted, to use the entire device. I chose to use a custom partition layout, forgoing multiple data partitions in favor of a single large &ldquo;/&rdquo; partition.</p>

<p>When given the opportunity to select OpenBSD install packages, I chose only:</p>

<ul>
<li><strong>bsd</strong> &ndash; The Kernel</li>
<li><strong>base53</strong> &ndash; Contains the base OpenBSD system</li>
<li><strong>etc53</strong> &ndash;  Contains all the files in /etc</li>
</ul>


<p>This represents the bare minimum OpenBSD system necessary to support an OpenVPN server. Any additional software or services represent additional, unnecessary security risk.</p>

<h3><a href="http://johnchapin.blogspot.com/2013/12/secure-comms-with-openbsd-and-openvpn_5552.html">Part 2 &ndash; OpenVPN Installation and PKI Configuration</a></h3>
]]></content>
  </entry>
  
</feed>
