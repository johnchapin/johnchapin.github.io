<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[johnchapin.boostrot.net]]></title>
  <link href="http://johnchapin.boostrot.net/atom.xml" rel="self"/>
  <link href="http://johnchapin.boostrot.net/"/>
  <updated>2013-12-16T13:53:14+08:00</updated>
  <id>http://johnchapin.boostrot.net/</id>
  <author>
    <name><![CDATA[John Chapin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 5]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/"/>
    <updated>2013-12-15T13:21:11+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5</id>
    <content type="html"><![CDATA[<p>This is the fifth and final part in a series of posts detailing how I’m securing my Internet communications using open-source software.</p>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a> &ndash; Set up of an OpenBSD VPS with full-disk encryption and the minimum OS install necessary to run OpenVPN.<br/>
<a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a> &ndash; Installation of OpenVPN and configuring the PKI system.<br/>
<a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a> &ndash; OpenVPN configuration and actually running the OpenVPN daemon.<br/>
<a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a> &ndash; Installation and configuration of the Tunnelblick OpenVPN client on Mac OS X.</p>

<hr />

<h3>OpenBSD 5.4</h3>

<p>A few weeks after I set up and configured the VPN system on OpenBSD 5.3, a <a href="http://www.openbsd.org/54.html">new version of OpenBSD</a> was released. This isn&rsquo;t too surprising of course, as the OpenBSD team releases every 6 months!</p>

<!-- more -->


<p><img src="http://www.openbsd.org/images/Puffia.jpg" title="OpenBSD 5.4 Puffia" alt="" /></p>

<p>Here are some relevant changes that I&rsquo;ve noticed:</p>

<p><strong>The OpenVPN package has been updated to version 2.3.1p2</strong> &ndash; Here&rsquo;s the <a href="https://community.openvpn.net/openvpn/wiki/ChangesInOpenvpn23#OpenVPN2.3.0">changelog</a> from the previous 2.2.x version. Of particular note, OpenVPN now fully supports IPv6.</p>

<p><strong>The easy-rsa package is no longer a part of OpenVPN</strong> &ndash; This is a Good Thing™, as the version of easy-rsa included in the OpenVPN package on OpenBSD 5.3 is incomplete and difficult to reconcile with the <a href="https://github.com/OpenVPN/easy-rsa">official easy-rsa package</a>. The new easy-rsa package tracks version 2.2.0, and includes the <em>whichopenssl</em> script that was missing from the previous packaged version.</p>

<h3>iOS Client</h3>

<p>There is an excellent and free <a href="https://itunes.apple.com/app/openvpn-connect/id590379981">iOS application for OpenVPN</a>. Configuration is simple, just build an OpenVPN client configuration (see <a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a>), and transfer the files to the OpenVPN application on your iOS device using iTunes.</p>

<p>Here&rsquo;s a screenshot of the OpenVPN client in action (with my actual VPN IP address blanked out):</p>

<p><img src="http://i.imgur.com/TsUwTfpl.jpg" title="OpenVPN iOS Application" alt="" /></p>

<h3>Parting Thoughts</h3>

<p>I&rsquo;ve added the following paragraph to the introduction of each part of this series:</p>

<blockquote><p><em>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</em></p></blockquote>

<p>I can&rsquo;t stress enough how important it is to understand the limitations of a VPN and the risk inherent in communicating over the Internet. Because the Internet is a shared, public medium, communications channels that use it have an inherent level of exposure that can never be eliminated.</p>

<p>With that concern in mind, I have to admit that my paranoia has practical limits. To a certain extent this series documents the risks I&rsquo;m willing to accept, like:</p>

<ul>
<li>Using a Virtual Private Server hosted in a third-party country.</li>
<li>Installing the operating system on that VPS using installation media provided by the hosting company.</li>
<li>Using closed, commericial hardware (a Macbook Air and an iPhone 4S), running closed-source, commericial operating systems (OS X and iOS).</li>
<li>Storing passwords and credentials for all the above in a closed-source password management tool.</li>
</ul>


<h3>The Bottom Line</h3>

<p><strong>All of the technical measures in the world are unlikely to block a determined effort to access your communications.</strong> The solution outlined in this series should be considered a deterrent to casual snooping, and nothing more.</p>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/">Part 5</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 4]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/"/>
    <updated>2013-12-14T11:28:34+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4</id>
    <content type="html"><![CDATA[<p>This is part 4 in a series of posts detailing how I&rsquo;m securing my Internet communications using open-source software.</p>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a> &ndash; Set up of an OpenBSD VPS with full-disk encryption and the minimum OS install necessary to run OpenVPN.<br/>
<a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a> &ndash; Installation of OpenVPN and configuring the PKI system.<br/>
<a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a> &ndash; OpenVPN configuration and actually running the OpenVPN daemon.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<hr />

<h3>Tunnelblick Installation</h3>

<p>On Mac OS X, <a href="https://code.google.com/p/tunnelblick/">Tunnelblick</a> can be used to connect to the VPN server. It&rsquo;s an open-source application that offers simple, OpenVPN-specific configuration and a convenient graphical interface.</p>

<p>To install, simply <a href="https://code.google.com/p/tunnelblick/wiki/DownloadsEntry?tm=2#Tunnelblick_Beta_Release">download</a> and run the installer.</p>

<!-- more -->


<p>Before configuring the VPN, transfer the CA certificate and the client certificate and key from the VPN server to your client computer:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scp user@vpn.example.com:~/easy-rsa/keys/ca.crt ~/Desktop/
</span><span class='line'><span class="nv">$ </span>scp user@vpn.example.com:~/easy-rsa/keys/client1.example.com.crt ~/Desktop/
</span><span class='line'><span class="nv">$ </span>scp user@vpn.example.com:~/easy-rsa/keys/client1.example.com.key ~/Desktop/
</span></code></pre></td></tr></table></div></figure>


<p>Note that we could have generated the client certificate and key on the client machine, and gone through the certificate signing process without ever transmitting the client&rsquo;s private key over the network.</p>

<h3>Tunnelblick Configuration</h3>

<p>Open the Tunnelblick application. On the <em>Configurations</em> tab, click on the + icon in the lower left to add a new configuration. When prompted, select <em>&ldquo;I DO NOT have configuration files&rdquo;</em>.</p>

<p><a href="http://imgur.com/7Q69mXG"><img src="http://i.imgur.com/7Q69mXGl.png" alt="" /></a></p>

<p>Next, select <em>&ldquo;Create sample configuration and edit it&rdquo;</em>.</p>

<p><a href="http://imgur.com/1jx0mcs"><img src="http://i.imgur.com/1jx0mcsl.png" alt="" /></a></p>

<p>This process will create a sample configuration and put it on the Desktop.</p>

<p><a href="http://imgur.com/NtO3i6R"><img src="http://i.imgur.com/NtO3i6Rl.png" alt="" /></a></p>

<p>Move the downloaded certificates and key into the configuration folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Desktop
</span><span class='line'><span class="nv">$ </span>mv ca.crt Sample<span class="se">\ </span>Tunnelblick<span class="se">\ </span>VPN<span class="se">\ </span>Configuration/
</span><span class='line'><span class="nv">$ </span>mv client1.example.com.* Sample<span class="se">\ </span>Tunnelblick<span class="se">\ </span>VPN<span class="se">\ </span>Configuration/
</span></code></pre></td></tr></table></div></figure>


<p>Edit the <em>config.ovpn</em> file. It may already be open in your default text editor. The only changes necessary are:</p>

<ul>
<li>Use port 80 instead of 1194</li>
<li>Replace the dummy server name and PKI file names with valid ones.</li>
</ul>


<p>Here&rsquo;s a diff of those changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>42c42
</span><span class='line'>&lt; remote vpn.example.com 80
</span><span class='line'><span class="gd">---</span>
</span><span class='line'>&gt; remote my-server-1 1194
</span><span class='line'>89,90c89,90
</span><span class='line'>&lt; cert client1.example.com.crt
</span><span class='line'>&lt; key client1.example.com.key
</span><span class='line'><span class="gd">---</span>
</span><span class='line'>&gt; cert client.crt
</span><span class='line'>&gt; key client.key
</span></code></pre></td></tr></table></div></figure>


<p>The Tunnelblick configuration folder can be renamed (in this case, to &ldquo;Example VPN&rdquo;). To use this configuration in Tunnelblick, add the <em>.tblk</em> extension to the folder name, and then double-click the folder to install the configuration in Tunnelblick.</p>

<p><a href="http://imgur.com/uKnpOVc"><img src="http://i.imgur.com/uKnpOVcl.png" alt="" /></a></p>

<h3>Running Tunnelblick</h3>

<p>Click on the &ldquo;Railroad Tunnel&rdquo; icon in the Mac OS X menu bar, and select the &ldquo;Connect Example VPN&rdquo; option.</p>

<p><a href="http://imgur.com/G0lXEOn"><img src="http://i.imgur.com/G0lXEOnl.png" alt="" /></a></p>

<p><strong>That&rsquo;s it</strong> &ndash; you&rsquo;re now using Tunnelblick to route your Internet communications through OpenVPN running on a VPS-hosted OpenBSD server.</p>

<h3><a href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/">Part 5 &ndash; Wrap-up, OpenBSD 5.4 notes, and more!</a></h3>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/">Part 5</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 3]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/"/>
    <updated>2013-12-11T00:00:00+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3</id>
    <content type="html"><![CDATA[<p>This is part 3 in a series of posts detailing how I&rsquo;m securing my Internet communications using open-source software.</p>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a> &ndash; Set up of an OpenBSD VPS with full-disk encryption and the minimum OS install necessary to run OpenVPN.<br/>
<a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a> &ndash; Installation of OpenVPN and configuring the PKI system.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<hr />

<h3>Configuring OpenVPN</h3>

<p>With the OpenVPN package installed and the PKI components in place, configuring and running the actual server software is straightforward. The OpenVPN package includes a sample server configuration file that makes a good starting point.</p>

<!-- more -->


<p>Make an OpenVPN configuration directory in <em>/etc</em>, and add a copy of the sample configuration, the CA certificate, the VPN server certificate and private key, and the Diffie-Hellman parameters:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># As root...</span>
</span><span class='line'><span class="nv">$ </span>mkdir /etc/openvpn
</span><span class='line'>
</span><span class='line'><span class="c"># Copy the sample configuration</span>
</span><span class='line'><span class="nv">$ </span>cp /usr/local/share/examples/openvpn/sample-config-files/server.conf /etc/openvpn/server.conf
</span><span class='line'>
</span><span class='line'><span class="c"># Copy PKI materials from the easy-rsa working directory</span>
</span><span class='line'><span class="nv">$ </span>cp easy-rsa/keys/ca.crt /etc/openvpn/ca.crt
</span><span class='line'><span class="nv">$ </span>cp easy-rsa/keys/dh4096.pem /etc/openvpn/dh4096.pem
</span><span class='line'><span class="nv">$ </span>cp easy-rsa/keys/vpn.example.com.crt /etc/openvpn/vpn.example.com.crt
</span><span class='line'>
</span><span class='line'><span class="c"># Make a private directory for the server key</span>
</span><span class='line'><span class="nv">$ </span>mkdir /etc/openvpn/private
</span><span class='line'><span class="nv">$ </span>chmod 500 /etc/openvpn/private
</span><span class='line'>
</span><span class='line'><span class="c"># Move the server key from the easy-rsa working directory</span>
</span><span class='line'><span class="nv">$ </span>mv easy-rsa/keys/vpn.example.com.key /etc/openvpn/private/vpn.example.com.key
</span><span class='line'><span class="nv">$ </span>chmod 400 /etc/openvpn/private/vpn.example.com.key
</span></code></pre></td></tr></table></div></figure>


<p>I made the following changes to the default configuration:</p>

<ul>
<li>Run the server on port 80, so it can be reached from networks that might restrict or firewall outbound traffic to other ports.</li>
<li>Use the <em>tun0</em> device.</li>
<li>Enable <em>redirect-gateway</em>, to force all client traffic through the VPN.</li>
<li>Push DNS server information addresses to clients (OpenDNS, in this case).</li>
<li>Only allow 2 clients at a time (a laptop and a mobile device).</li>
</ul>


<p>Here&rsquo;s the diff of the <em>server.conf</em> changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>diff /etc/openvpn/server.conf  /usr/local/share/examples/openvpn/sample-config-files/server.conf
</span><span class='line'>32c32
</span><span class='line'>&lt; port 80
</span><span class='line'>---
</span><span class='line'>&gt; port 1194
</span><span class='line'>53c53
</span><span class='line'>&lt; dev tun0
</span><span class='line'>---
</span><span class='line'>&gt; dev tun
</span><span class='line'>78,80c78,80
</span><span class='line'>&lt; ca /etc/openvpn/ca.crt
</span><span class='line'>&lt; cert /etc/openvpn/vpn.example.com.crt
</span><span class='line'>&lt; key /etc/openvpn/private/vpn.example.com.key  <span class="c"># This file should be kept secret</span>
</span><span class='line'>---
</span><span class='line'>&gt; ca ca.crt
</span><span class='line'>&gt; cert server.crt
</span><span class='line'>&gt; key server.key  <span class="c"># This file should be kept secret</span>
</span><span class='line'>87c87
</span><span class='line'>&lt; dh /etc/openvpn/dh4096.pem
</span><span class='line'>---
</span><span class='line'>&gt; dh dh1024.pem
</span><span class='line'>187c187
</span><span class='line'>&lt; push <span class="s2">&quot;redirect-gateway def1 bypass-dhcp&quot;</span>
</span><span class='line'>---
</span><span class='line'>&gt; ;push <span class="s2">&quot;redirect-gateway def1 bypass-dhcp&quot;</span>
</span><span class='line'>195,196c195,196
</span><span class='line'>&lt; push <span class="s2">&quot;dhcp-option DNS 208.67.222.222&quot;</span>
</span><span class='line'>&lt; push <span class="s2">&quot;dhcp-option DNS 208.67.220.220&quot;</span>
</span><span class='line'>---
</span><span class='line'>&gt; ;push <span class="s2">&quot;dhcp-option DNS 208.67.222.222&quot;</span>
</span><span class='line'>&gt; ;push <span class="s2">&quot;dhcp-option DNS 208.67.220.220&quot;</span>
</span><span class='line'>255c255
</span><span class='line'>&lt; max-clients 2
</span><span class='line'>---
</span><span class='line'>&gt; ;max-clients 100
</span></code></pre></td></tr></table></div></figure>


<p>Note that in this configuration, the server doesn&rsquo;t need to store individual client certificates. The server will only accept clients whose certificates were signed by the master CA certificate (the same one that signed the server certificate).</p>

<h3>Configuring OpenBSD for OpenVPN</h3>

<p>The OS requires a few additional tweaks to run OpenVPN.</p>

<p>Turn on packet forwarding:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sysctl -n net.inet.ip.forwarding<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>Add the following line to <em>pf.conf</em> to perform Network Address Translation on VPN connections (the 10.8.0.0/24 block is distributed via DHCP to OpenVPN clients):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pass out on em0 from 10.8.0.0/24 to any nat-to <span class="o">(</span>em0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Running the OpenVPN daemon</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/usr/local/sbin/openvpn --daemon --config /etc/openvpn/server.conf
</span><span class='line'>
</span><span class='line'><span class="c"># Verify that it&#39;s actually running:</span>
</span><span class='line'><span class="nv">$ </span>ps -aux | grep openvpn
</span><span class='line'>_openvpn  2900  0.0  0.3  1720  3424 ??  Ss    Mon03PM   21:49.15 /usr/local/sbin/openvpn --daemon --config /etc/openvpn/server.conf
</span></code></pre></td></tr></table></div></figure>


<p>Log output will appear in <em>/var/log/daemon</em>. At this point, there are no clients, so it&rsquo;s enough that the daemon starts without errors.</p>

<h3><a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4 &ndash; Client configuration</a></h3>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/">Part 5</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 2]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/"/>
    <updated>2013-12-09T00:00:00+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2</id>
    <content type="html"><![CDATA[<p>This is part 2 in a series of posts detailing how I&rsquo;m securing my Internet communications using open-source software.</p>

<p>In <a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">part 1</a>, I set up an OpenBSD VPS with full-disk encryption and the minimum OS install necessary to run OpenVPN.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<hr />

<h3>OpenVPN Installation</h3>

<p>Installing and configuring the OpenVPN package can seem daunting at first, but given a relatively simple VPN architecture (many clients, one server), the setup is straightforward. Many of the steps below are cribbed from the <a href="http://www.kernel-panic.it/openbsd/vpn/vpn4.html">OpenVPN section of &ldquo;Building VPNs on OpenBSD&rdquo;</a>, which is 4 years old but still informative.</p>

<!-- more -->


<p>Install the OpenVPN package from the installation media or an official OpenBSD mirror site. The OpenBSD FAQ has <a href="http://www.openbsd.org/faq/faq15.html#Easy">instructions</a> for setting up the package system.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Dutch mirror site</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PKG_PATH</span><span class="o">=</span><span class="s2">&quot;http://ftp.nluug.nl/pub/OpenBSD/5.3/packages/`machine -a`&quot;</span>
</span><span class='line'><span class="nv">$ </span>pkg_add openvpn
</span></code></pre></td></tr></table></div></figure>


<p>Next, make a copy of the easy-rsa directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cp -R /usr/local/share/examples/openvpn/easy-rsa/2.0 easyrsa
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>easyrsa
</span></code></pre></td></tr></table></div></figure>


<h3>Public Key Infrastructure (PKI) Configuration</h3>

<p>The version of easy-rsa that&rsquo;s included with OpenVPN on OpenBSD 5.3 is missing the <em>whichopenssl</em> script, so in the <em>vars</em> file, the <em>KEY_CONFIG</em> line must be edited in addition to the other <em>KEY*</em> lines. Here is a diff with my changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>$ diff vars /usr/local/share/examples/openvpn/easy-rsa/2.0/vars
</span><span class='line'>29c29
</span><span class='line'>&lt; export KEY_CONFIG=&quot;$EASY_RSA/openssl-1.0.0.cnf&quot;
</span><span class='line'><span class="gd">---</span>
</span><span class='line'>&gt; export KEY_CONFIG=`$EASY_RSA/whichopensslcnf $EASY_RSA`
</span><span class='line'>53c53
</span><span class='line'>&lt; export KEY_SIZE=4096
</span><span class='line'><span class="gd">---</span>
</span><span class='line'>&gt; export KEY_SIZE=1024
</span><span class='line'>64,71c64,72
</span><span class='line'>&lt; export KEY_COUNTRY=&quot;ZZcountry&quot;
</span><span class='line'>&lt; export KEY_PROVINCE=&quot;ZZprovince&quot;
</span><span class='line'>&lt; export KEY_CITY=&quot;ZZcity&quot;
</span><span class='line'>&lt; export KEY_ORG=&quot;example&quot;
</span><span class='line'>&lt; export KEY_EMAIL=
</span><span class='line'>&lt; export KEY_CN=
</span><span class='line'>&lt; export KEY_NAME=
</span><span class='line'>&lt; export KEY_OU=
</span><span class='line'><span class="gd">---</span>
</span><span class='line'>&gt; export KEY_COUNTRY=&quot;US&quot;
</span><span class='line'>&gt; export KEY_PROVINCE=&quot;CA&quot;
</span><span class='line'>&gt; export KEY_CITY=&quot;SanFrancisco&quot;
</span><span class='line'>&gt; export KEY_ORG=&quot;Fort-Funston&quot;
</span><span class='line'>&gt; export KEY_EMAIL=&quot;me@myhost.mydomain&quot;
</span><span class='line'>&gt; export KEY_EMAIL=mail@host.domain
</span><span class='line'>&gt; export KEY_CN=changeme
</span><span class='line'>&gt; export KEY_NAME=changeme
</span><span class='line'>&gt; export KEY_OU=changeme
</span></code></pre></td></tr></table></div></figure>


<p>Because they are likely to change for each certificate generated, the <em>KEY_EMAIL</em>, <em>KEY_CN</em>, <em>KEY_NAME</em>, and <em>KEY_OU</em> values can be removed from the file.</p>

<p>After editing the vars file, source it and run these scripts to setup the PKI system:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>. vars
</span><span class='line'><span class="nv">$ </span>./clean-all
</span><span class='line'><span class="nv">$ </span>./build-dh
</span><span class='line'><span class="nv">$ </span>./pkitool --initca
</span></code></pre></td></tr></table></div></figure>


<p>Generate a certificate for the VPN server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./pkitool --server vpn.example.com
</span></code></pre></td></tr></table></div></figure>


<p>And one or more client certificates:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Can also supply KEY_CN, KEY_OU, and KEY_EMAIL</span>
</span><span class='line'><span class="nv">$ KEY_NAME</span><span class="o">=</span>client1 ./pkitool client1.example.com
</span></code></pre></td></tr></table></div></figure>


<p>The <em>keys</em> directory should now be full of certificates, keys, and signing requests:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls keys/
</span><span class='line'>01.pem
</span><span class='line'>02.pem
</span><span class='line'>ca.crt
</span><span class='line'>ca.key
</span><span class='line'>dh4096.pem
</span><span class='line'>serial
</span><span class='line'>vpn.example.com.crt
</span><span class='line'>vpn.example.com.csr
</span><span class='line'>vpn.example.com.key
</span><span class='line'>client1.example.com.crt
</span><span class='line'>client1.example.com.csr
</span><span class='line'>client1.example.com.key
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3><a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3 &ndash; Running OpenVPN on OpenBSD</a></h3>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/">Part 5</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Comms With OpenBSD and OpenVPN, Part 1]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/"/>
    <updated>2013-12-07T00:00:00+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1</id>
    <content type="html"><![CDATA[<p>This is part 1 in a series of posts detailing how I secure my Internet communications using OpenBSD, OpenVPN, and other open-source software.</p>

<p>It should be noted that even these measures are only securing part of my traffic. Everything that exits my VPN endpoint is protected only by whatever protocol-specific security measures are already in place (e.g. HTTPS for web traffic).</p>

<hr />

<h3>Virtual Private Server</h3>

<p>I prefer a virtual private server (VPS) over buying, configuring, shipping, upgrading, and disposing of a Real Machine™. Using QEMU/KVM, the hosting company <a href="http://transip.eu">TransIP</a> supports VPSs running <a href="http://www.openbsd.org">OpenBSD</a> 5.3. I&rsquo;m currently using their &ldquo;Blade VPS X1&rdquo; product, which costs €10/month and provides 1GB memory, 50GB storage, 1TB transfer, and importantly, a static IPv4 address.</p>

<!-- more -->


<h3>Why OpenBSD?</h3>

<p>I trust OpenBSD to be the most secure operating system available, and I have several years of experience installing and using it. The OpenBSD development team is world-renowned for their commitment to security, and I truly believe that there is no better general-purpose operating system to use as a basis for this project.</p>

<p><img src="http://openbsd.org/images/RoyPuffy.jpg" title="OpenBSD Roy Puffy" alt="" /></p>

<p>TransIP supplies installation files for OpenBSD 5.3. Unfortunately, the OpenBSD project does <em>not</em> digitally sign their releases, instead choosing only to provide SHA256 hashes of the installation set files to protect against corruption or tampering. In their own words, <a href="http://www.openbsd.org/faq/faq3.html#Verify">&ldquo;If the men in black suits are out to get you, they&rsquo;re going to get you.&rdquo;</a></p>

<p>With that in mind, when using a VPS, we have no choice but to trust that the provider hasn&rsquo;t tampered with the installation process or tapped the VNC console (before SSH can be enabled) to capture our disk encryption or system passwords.</p>

<h3>OpenBSD Installation with Full Disk Encryption</h3>

<p>OpenBSD 5.3 supports full disk encryption, so I followed the steps in Ryan Kavanagh&rsquo;s blog post, <a href="http://ryanak.ca/planet-ubuntu/2013/03/26/Setting-up-full-disk-encryption-in-OpenBSD-5.3.html">&ldquo;Setting up full disk encryption in OpenBSD 5.3&rdquo;</a>. His instructions are comprehensive, but I found it useful to re-familiarize myself with both the <a href="http://www.openbsd.org/faq/faq4.html">OpenBSD installation process</a>, and the usage of <a href="http://www.openbsd.org/faq/faq14.html#fdisk">fdisk</a> in particular.</p>

<p>After setting up the encrypted disk, I proceeded with the standard OpenBSD installation, using sd0 as the installation target, and selecting &ldquo;whole&rdquo; when prompted, to use the entire device. I chose to use a custom partition layout, forgoing multiple data partitions in favor of a single large &ldquo;/&rdquo; partition.</p>

<p>When given the opportunity to select OpenBSD install packages, I chose only:</p>

<ul>
<li><strong>bsd</strong> &ndash; The Kernel</li>
<li><strong>base53</strong> &ndash; Contains the base OpenBSD system</li>
<li><strong>etc53</strong> &ndash;  Contains all the files in /etc</li>
</ul>


<p>This represents the bare minimum OpenBSD system necessary to support an OpenVPN server. Any additional software or services represent additional, unnecessary security risk.</p>

<h3><a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2 &ndash; OpenVPN Installation and PKI Configuration</a></h3>

<p><a href="http://johnchapin.boostrot.net/blog/2013/12/07/secure-comms-with-openbsd-and-openvpn-part-1/">Part 1</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/09/secure-comms-with-openbsd-and-openvpn-part-2/">Part 2</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/11/secure-comms-with-openbsd-and-openvpn-part-3/">Part 3</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/14/secure-comms-with-openbsd-and-openvpn-part-4/">Part 4</a>, <a href="http://johnchapin.boostrot.net/blog/2013/12/15/secure-comms-with-openbsd-and-openvpn-part-5/">Part 5</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oases of the Digital Nomad]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/03/05/oases-of-the-digital-nomad/"/>
    <updated>2013-03-05T15:30:00+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/03/05/oases-of-the-digital-nomad</id>
    <content type="html"><![CDATA[<p>The weekday routine in Ciudad de Panama:</p>

<ol>
<li>Wake up, get out of bed, drag a comb across my head.</li>
<li>Eat breakfast.</li>
<li>GTFO before it gets too hot.</li>
<li>Find an oasis.</li>
</ol>


<!-- more -->


<h3>Oasis #1: New York Bagel Café, El Cangrejo</h3>

<p>The good:</p>

<ul>
<li>Consistent wifi, several accessible power outlets.</li>
<li>Tasty, relatively inexpensive food and bottomless coffee.</li>
<li>Easy access via the Via España bus line.</li>
<li>Loads of expats.</li>
</ul>


<p>The bad:</p>

<ul>
<li>Loads of expats.</li>
<li>Generally terrible music, increasing in volume throughout the day.</li>
<li>Impressively unpleasant chairs.</li>
</ul>


<p>We ended up at the NYBC almost every other day. It was so consistent that it almost became hard to take a chance on something else, knowing we could have a good experience at NYBC.</p>

<p><a href="http://imgur.com/QeH3ACq"><img src="http://i.imgur.com/QeH3ACq.jpg" alt="" /></a><br/>
Einstein&rsquo;s head, carefully enlarged, preserved, and mounted outside of the NYBC in El Cangrejo.</p>

<h3>Oasis #2: Bon Vivant, San Francisco</h3>

<p>The good:</p>

<ul>
<li>Reasonable wifi</li>
<li>Uncrowded (except during lunch)</li>
<li>Excellent food, especially the croissants</li>
</ul>


<p>The bad:</p>

<ul>
<li>Hard to get to via bus from Parque Lefevre. We ended up walking 3+ miles roundtrip.</li>
<li>Packed during lunch. Great for business, but not conducive to tele-working.</li>
<li>Relatively expensive food, few vegetarian options.</li>
</ul>


<p>Bon Vivant was recommended via a response to my inquiry on the &ldquo;Americans in Panama&rdquo; Yahoo group. We ended up going there twice &ndash; might have been back more often, but it was a bit of a hike to get to from our house in Parque Lefevre. Cutting through Parque Omar Torrijos got us away from the traffic and trash (and uncovered manholes), but a 3+ mile roundtrip in CdP is a lot, especially if you don&rsquo;t want to be a puddle of sweat at your destination.</p>

<h3>Oasis #3: Churreria Manolo, El Cangrejo and Obarrio</h3>

<p>The good:</p>

<ul>
<li>Good wifi</li>
<li>Extensive menu</li>
<li>Uncrowded</li>
</ul>


<p>The bad:</p>

<ul>
<li>No power outlets (in the El Cangrejo location)</li>
<li>Mediocre food</li>
<li>Grumpy waitstaff (even for Panama!)</li>
</ul>


<p>Another recommendation, this time from <a href="http://www.reddit.com/r/Panama/comments/176xy4/recommend_a_good_coffee_shop_w_wifi_in_panama_city/">/r/panama</a>. We went to the Obarrio location in the evening, after a day of walking around and trying to find wifi in one of the big malls downtown. It&rsquo;s tucked off of Calle 50, and was extremely quiet. IIRC, we were one of only a few patrons, and definitely the only ones with laptops out.</p>

<p>The El Cangrejo location had a better overall vibe, with more customers and a livelier setting in general, although we probably wouldn&rsquo;t have gone had NYBC not been closed for Carnavales. Which might explain why the waitstaff were a little grumpy &ndash; they had to work instead of partying!</p>

<h3>Never worked in:</h3>

<p><strong>Petit Paris</strong> in Marbella. Delicious food&hellip;</p>

<p>PSA: Google Maps is just dead wrong about the location of this place. It&rsquo;s just north of Cinta Costera, in the Marbella neighborhood. The map on their website is accurate.</p>

<h3>Never made it to:</h3>

<p><strong>Café Sucre</strong> and <strong>Bajareque</strong> in Casco Viejo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Out Into the World.]]></title>
    <link href="http://johnchapin.boostrot.net/blog/2013/01/17/out-into-the-world/"/>
    <updated>2013-01-17T16:00:00+08:00</updated>
    <id>http://johnchapin.boostrot.net/blog/2013/01/17/out-into-the-world</id>
    <content type="html"><![CDATA[<p>Several people have asked me, &ldquo;John, you handsome devil, how exactly did you manage to arrange your life to be able to pick up and go out into the world with no plans and no return ticket?&rdquo;</p>

<p>The answer, for me at least, was and is &ldquo;persistence&rdquo;. I have persistently and obsessively, over the course of several months, poured over the details of my life and made sure that every action I took moved me closer to location independence. Not all of those decisions have been easy or straightforward.</p>

<!-- more -->


<p><a href="http://imgur.com/Nm61Nev"><img src="http://i.imgur.com/Nm61Nevl.jpg" alt="" /></a></p>

<p>In no particular order, here&rsquo;s what I had to do.</p>

<h3>Set the date and first location.</h3>

<p>A wonderful friend made this very easy. Gerald and his lovely fiance Piali (now lovely wife!) decided to have a destination wedding at Playa Bonita resort, just west of Panama City, Panama. With plane tickets purchased and a resort booked, we were definitely getting on a plane to Panama in mid-January.</p>

<p>Having a date on the calendar made it a lot easier to work backwards and start sorting out everything else.</p>

<h3>Give up my beloved dog, Maggie.</h3>

<p>She was my rock during a rough patch in my life, and saying goodbye wasn&rsquo;t easy. Fortunately, my good friend Chris was interested in taking her. A three-day, cross-country road trip ensued, and now she&rsquo;s living it up in Boise, Idaho.</p>

<p>With a cool climate, an awesome owner, and some new canine friends, Maggie is a very happy dog :&ndash;)</p>

<h3>Find tenants for my house.</h3>

<p>Looking for tenants is never fun. Looking for tenants in a college town in the middle of November seemed like a terrible idea. Fortune smiled again, as I quickly found two sets of tenants to rent my house over the next 18 months, with no gaps in occupancy and at reasonable rents.</p>

<h3>Get rid of almost everything.</h3>

<p>What a pain. After countless trips to Goodwill, the Salvation Army, and the local dump, I ended up with &frac12; a shed of mostly tools, some kitchen equipment, a few mementos, and lots of specialty running and biking gear. That still seems like &frac12; a shed too much, but I ran out of time before I ran out of inventory!</p>

<p>I&rsquo;m jealous of Jeca, who managed to get everything she didn&rsquo;t bring to Panama into 4 bins!</p>

<h3>Sell my car.</h3>

<p>I needed the car until almost the last minute, so I didn&rsquo;t post a for sale ad until about 3 weeks before we left the country. With time running out, I advertised a good price, and accepted an offer for a quick sale with a week to go.</p>

<h3>Adjust my employment situation.</h3>

<p>This kept me up at night. I was very happy and gainfully employed, but also ready to leave a job that I loved so that I could travel. I had a very vague backup plan in place (consulting, or something).</p>

<p>However, my current employer (<a href="http://www.roomkey.com">Roomkey</a>) was extremely supportive of my plans, and agreed to let me work 100% remotely. I&rsquo;m looking forward to writing more about this arrangement, and its positives and negatives as it becomes a part of my day-to-day life.</p>

<h3>Hoodwink the man.</h3>

<p>Despite no longer being physically present in the US, I need to receive tax documents, rent checks, and a few other odd and ends via the USPS. I set up an account with a mail forwarding service that will allow me to receive physical mail at a US address. Through a web interface, I can direct that mail to be shredded, scanned, or forwarded. They&rsquo;ll even forward checks to my bank!</p>

<p>The downside is that the difference between a mailing address and a physical address still eludes some people and institutions (like my city government in Virginia). This topic deserves its own article, so stay tuned for more.</p>

<p>So&hellip;</p>

<p>That&rsquo;s it in a nutshell. This kind of lifestyle change is possible for almost anyone, given sufficient motivation.</p>

<p>If you want to do it, do it.</p>

<p>And, if you&rsquo;re read this far, go check out my girlfriend and traveling companion&rsquo;s far more interesting blog here: <a href="http://jecaarmstrong.blogspot.com/">Calle 90</a></p>
]]></content>
  </entry>
  
</feed>
